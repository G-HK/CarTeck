import {
  __commonJS
} from "./chunk-KHGO2BKN.js";

// node_modules/vue-axios/dist/vue-axios.es5.js
var require_vue_axios_es5 = __commonJS((exports, module) => {
  "use strict";
  function _typeof(e) {
    return (_typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e2) {
      return typeof e2;
    } : function(e2) {
      return e2 && typeof Symbol == "function" && e2.constructor === Symbol && e2 !== Symbol.prototype ? "symbol" : typeof e2;
    })(e);
  }
  function _classCallCheck(e, r) {
    if (!(e instanceof r))
      throw new TypeError("Cannot call a class as a function");
  }
  function _defineProperties(e, r) {
    for (var t2 = 0; t2 < r.length; t2++) {
      var n = r[t2];
      n.enumerable = n.enumerable || false, n.configurable = true, "value" in n && (n.writable = true), Object.defineProperty(e, n.key, n);
    }
  }
  function _createClass(e, r, t2) {
    return r && _defineProperties(e.prototype, r), t2 && _defineProperties(e, t2), e;
  }
  function _slicedToArray(e, r) {
    return _arrayWithHoles(e) || _iterableToArrayLimit(e, r) || _unsupportedIterableToArray(e, r) || _nonIterableRest();
  }
  function _arrayWithHoles(e) {
    if (Array.isArray(e))
      return e;
  }
  function _iterableToArrayLimit(e, r) {
    if (typeof Symbol != "undefined" && Symbol.iterator in Object(e)) {
      var t2 = [], n = true, o = false, a = void 0;
      try {
        for (var c, i = e[Symbol.iterator](); !(n = (c = i.next()).done) && (t2.push(c.value), !r || t2.length !== r); n = true)
          ;
      } catch (e2) {
        o = true, a = e2;
      } finally {
        try {
          n || i.return == null || i.return();
        } finally {
          if (o)
            throw a;
        }
      }
      return t2;
    }
  }
  function _unsupportedIterableToArray(e, r) {
    if (e) {
      if (typeof e == "string")
        return _arrayLikeToArray(e, r);
      var t2 = Object.prototype.toString.call(e).slice(8, -1);
      return t2 === "Object" && e.constructor && (t2 = e.constructor.name), t2 === "Map" || t2 === "Set" ? Array.from(e) : t2 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t2) ? _arrayLikeToArray(e, r) : void 0;
    }
  }
  function _arrayLikeToArray(e, r) {
    (r == null || r > e.length) && (r = e.length);
    for (var t2 = 0, n = new Array(r); t2 < r; t2++)
      n[t2] = e[t2];
    return n;
  }
  function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  function _createForOfIteratorHelper(e, r) {
    var t2;
    if (typeof Symbol == "undefined" || e[Symbol.iterator] == null) {
      if (Array.isArray(e) || (t2 = _unsupportedIterableToArray(e)) || r && e && typeof e.length == "number") {
        t2 && (e = t2);
        var n = 0;
        return {s: r = function() {
        }, n: function() {
          return n >= e.length ? {done: true} : {done: false, value: e[n++]};
        }, e: function(e2) {
          throw e2;
        }, f: r};
      }
      throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    var o, a = true, c = false;
    return {s: function() {
      t2 = e[Symbol.iterator]();
    }, n: function() {
      var e2 = t2.next();
      return a = e2.done, e2;
    }, e: function(e2) {
      c = true, o = e2;
    }, f: function() {
      try {
        a || t2.return == null || t2.return();
      } finally {
        if (c)
          throw o;
      }
    }};
  }
  function createCommonjsModule(e, r, t2) {
    return e(t2 = {path: r, exports: {}, require: function(e2, r2) {
      return commonjsRequire(e2, r2 == null ? t2.path : r2);
    }}, t2.exports), t2.exports;
  }
  function commonjsRequire() {
    throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs");
  }
  var SEMVER_SPEC_VERSION = "2.0.0";
  var MAX_LENGTH = 256;
  var MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;
  var MAX_SAFE_COMPONENT_LENGTH = 16;
  var constants = {SEMVER_SPEC_VERSION, MAX_LENGTH, MAX_SAFE_INTEGER, MAX_SAFE_COMPONENT_LENGTH};
  var debug = (typeof process == "undefined" ? "undefined" : _typeof(process)) === "object" && process.env && process.env.NODE_DEBUG && /\bsemver\b/i.test(process.env.NODE_DEBUG) ? function() {
    for (var e, r = arguments.length, t2 = new Array(r), n = 0; n < r; n++)
      t2[n] = arguments[n];
    return (e = console).error.apply(e, ["SEMVER"].concat(t2));
  } : function() {
  };
  var debug_1 = debug;
  var re_1 = createCommonjsModule(function(e, r) {
    var t2 = constants.MAX_SAFE_COMPONENT_LENGTH, o = (r = e.exports = {}).re = [], a = r.src = [], c = r.t = {}, i = 0;
    (e = function(e2, r2, t3) {
      var n = i++;
      debug_1(n, r2), c[e2] = n, a[n] = r2, o[n] = new RegExp(r2, t3 ? "g" : void 0);
    })("NUMERICIDENTIFIER", "0|[1-9]\\d*"), e("NUMERICIDENTIFIERLOOSE", "[0-9]+"), e("NONNUMERICIDENTIFIER", "\\d*[a-zA-Z-][a-zA-Z0-9-]*"), e("MAINVERSION", "(".concat(a[c.NUMERICIDENTIFIER], ")\\.") + "(".concat(a[c.NUMERICIDENTIFIER], ")\\.") + "(".concat(a[c.NUMERICIDENTIFIER], ")")), e("MAINVERSIONLOOSE", "(".concat(a[c.NUMERICIDENTIFIERLOOSE], ")\\.") + "(".concat(a[c.NUMERICIDENTIFIERLOOSE], ")\\.") + "(".concat(a[c.NUMERICIDENTIFIERLOOSE], ")")), e("PRERELEASEIDENTIFIER", "(?:".concat(a[c.NUMERICIDENTIFIER], "|").concat(a[c.NONNUMERICIDENTIFIER], ")")), e("PRERELEASEIDENTIFIERLOOSE", "(?:".concat(a[c.NUMERICIDENTIFIERLOOSE], "|").concat(a[c.NONNUMERICIDENTIFIER], ")")), e("PRERELEASE", "(?:-(".concat(a[c.PRERELEASEIDENTIFIER], "(?:\\.").concat(a[c.PRERELEASEIDENTIFIER], ")*))")), e("PRERELEASELOOSE", "(?:-?(".concat(a[c.PRERELEASEIDENTIFIERLOOSE], "(?:\\.").concat(a[c.PRERELEASEIDENTIFIERLOOSE], ")*))")), e("BUILDIDENTIFIER", "[0-9A-Za-z-]+"), e("BUILD", "(?:\\+(".concat(a[c.BUILDIDENTIFIER], "(?:\\.").concat(a[c.BUILDIDENTIFIER], ")*))")), e("FULLPLAIN", "v?".concat(a[c.MAINVERSION]).concat(a[c.PRERELEASE], "?").concat(a[c.BUILD], "?")), e("FULL", "^".concat(a[c.FULLPLAIN], "$")), e("LOOSEPLAIN", "[v=\\s]*".concat(a[c.MAINVERSIONLOOSE]).concat(a[c.PRERELEASELOOSE], "?").concat(a[c.BUILD], "?")), e("LOOSE", "^".concat(a[c.LOOSEPLAIN], "$")), e("GTLT", "((?:<|>)?=?)"), e("XRANGEIDENTIFIERLOOSE", "".concat(a[c.NUMERICIDENTIFIERLOOSE], "|x|X|\\*")), e("XRANGEIDENTIFIER", "".concat(a[c.NUMERICIDENTIFIER], "|x|X|\\*")), e("XRANGEPLAIN", "[v=\\s]*(".concat(a[c.XRANGEIDENTIFIER], ")") + "(?:\\.(".concat(a[c.XRANGEIDENTIFIER], ")") + "(?:\\.(".concat(a[c.XRANGEIDENTIFIER], ")") + "(?:".concat(a[c.PRERELEASE], ")?").concat(a[c.BUILD], "?") + ")?)?"), e("XRANGEPLAINLOOSE", "[v=\\s]*(".concat(a[c.XRANGEIDENTIFIERLOOSE], ")") + "(?:\\.(".concat(a[c.XRANGEIDENTIFIERLOOSE], ")") + "(?:\\.(".concat(a[c.XRANGEIDENTIFIERLOOSE], ")") + "(?:".concat(a[c.PRERELEASELOOSE], ")?").concat(a[c.BUILD], "?") + ")?)?"), e("XRANGE", "^".concat(a[c.GTLT], "\\s*").concat(a[c.XRANGEPLAIN], "$")), e("XRANGELOOSE", "^".concat(a[c.GTLT], "\\s*").concat(a[c.XRANGEPLAINLOOSE], "$")), e("COERCE", "".concat("(^|[^\\d])(\\d{1,").concat(t2, "})") + "(?:\\.(\\d{1,".concat(t2, "}))?") + "(?:\\.(\\d{1,".concat(t2, "}))?") + "(?:$|[^\\d])"), e("COERCERTL", a[c.COERCE], true), e("LONETILDE", "(?:~>?)"), e("TILDETRIM", "(\\s*)".concat(a[c.LONETILDE], "\\s+"), true), r.tildeTrimReplace = "$1~", e("TILDE", "^".concat(a[c.LONETILDE]).concat(a[c.XRANGEPLAIN], "$")), e("TILDELOOSE", "^".concat(a[c.LONETILDE]).concat(a[c.XRANGEPLAINLOOSE], "$")), e("LONECARET", "(?:\\^)"), e("CARETTRIM", "(\\s*)".concat(a[c.LONECARET], "\\s+"), true), r.caretTrimReplace = "$1^", e("CARET", "^".concat(a[c.LONECARET]).concat(a[c.XRANGEPLAIN], "$")), e("CARETLOOSE", "^".concat(a[c.LONECARET]).concat(a[c.XRANGEPLAINLOOSE], "$")), e("COMPARATORLOOSE", "^".concat(a[c.GTLT], "\\s*(").concat(a[c.LOOSEPLAIN], ")$|^$")), e("COMPARATOR", "^".concat(a[c.GTLT], "\\s*(").concat(a[c.FULLPLAIN], ")$|^$")), e("COMPARATORTRIM", "(\\s*)".concat(a[c.GTLT], "\\s*(").concat(a[c.LOOSEPLAIN], "|").concat(a[c.XRANGEPLAIN], ")"), true), r.comparatorTrimReplace = "$1$2$3", e("HYPHENRANGE", "^\\s*(".concat(a[c.XRANGEPLAIN], ")") + "\\s+-\\s+" + "(".concat(a[c.XRANGEPLAIN], ")") + "\\s*$"), e("HYPHENRANGELOOSE", "^\\s*(".concat(a[c.XRANGEPLAINLOOSE], ")") + "\\s+-\\s+" + "(".concat(a[c.XRANGEPLAINLOOSE], ")") + "\\s*$"), e("STAR", "(<|>)?=?\\s*\\*"), e("GTE0", "^\\s*>=\\s*0.0.0\\s*$"), e("GTE0PRE", "^\\s*>=\\s*0.0.0-0\\s*$");
  });
  var numeric = /^[0-9]+$/;
  var compareIdentifiers = function(e, r) {
    var t2 = numeric.test(e), n = numeric.test(r);
    return t2 && n && (e = +e, r = +r), e === r ? 0 : t2 && !n || (!n || t2) && e < r ? -1 : 1;
  };
  var rcompareIdentifiers = function(e, r) {
    return compareIdentifiers(r, e);
  };
  var identifiers = {compareIdentifiers, rcompareIdentifiers};
  var MAX_LENGTH$1 = constants.MAX_LENGTH;
  var MAX_SAFE_INTEGER$1 = constants.MAX_SAFE_INTEGER;
  var re = re_1.re;
  var t = re_1.t;
  var compareIdentifiers$1 = identifiers.compareIdentifiers;
  var SemVer = function() {
    function o(e, r) {
      if (_classCallCheck(this, o), r && _typeof(r) === "object" || (r = {loose: !!r, includePrerelease: false}), e instanceof o) {
        if (e.loose === !!r.loose && e.includePrerelease === !!r.includePrerelease)
          return e;
        e = e.version;
      } else if (typeof e != "string")
        throw new TypeError("Invalid Version: ".concat(e));
      if (e.length > MAX_LENGTH$1)
        throw new TypeError("version is longer than ".concat(MAX_LENGTH$1, " characters"));
      if (debug_1("SemVer", e, r), this.options = r, this.loose = !!r.loose, this.includePrerelease = !!r.includePrerelease, !(r = e.trim().match(r.loose ? re[t.LOOSE] : re[t.FULL])))
        throw new TypeError("Invalid Version: ".concat(e));
      if (this.raw = e, this.major = +r[1], this.minor = +r[2], this.patch = +r[3], this.major > MAX_SAFE_INTEGER$1 || this.major < 0)
        throw new TypeError("Invalid major version");
      if (this.minor > MAX_SAFE_INTEGER$1 || this.minor < 0)
        throw new TypeError("Invalid minor version");
      if (this.patch > MAX_SAFE_INTEGER$1 || this.patch < 0)
        throw new TypeError("Invalid patch version");
      r[4] ? this.prerelease = r[4].split(".").map(function(e2) {
        if (/^[0-9]+$/.test(e2)) {
          var r2 = +e2;
          if (0 <= r2 && r2 < MAX_SAFE_INTEGER$1)
            return r2;
        }
        return e2;
      }) : this.prerelease = [], this.build = r[5] ? r[5].split(".") : [], this.format();
    }
    return _createClass(o, [{key: "format", value: function() {
      return this.version = "".concat(this.major, ".").concat(this.minor, ".").concat(this.patch), this.prerelease.length && (this.version += "-".concat(this.prerelease.join("."))), this.version;
    }}, {key: "toString", value: function() {
      return this.version;
    }}, {key: "compare", value: function(e) {
      if (debug_1("SemVer.compare", this.version, this.options, e), !(e instanceof o)) {
        if (typeof e == "string" && e === this.version)
          return 0;
        e = new o(e, this.options);
      }
      return e.version === this.version ? 0 : this.compareMain(e) || this.comparePre(e);
    }}, {key: "compareMain", value: function(e) {
      return e instanceof o || (e = new o(e, this.options)), compareIdentifiers$1(this.major, e.major) || compareIdentifiers$1(this.minor, e.minor) || compareIdentifiers$1(this.patch, e.patch);
    }}, {key: "comparePre", value: function(e) {
      if (e instanceof o || (e = new o(e, this.options)), this.prerelease.length && !e.prerelease.length)
        return -1;
      if (!this.prerelease.length && e.prerelease.length)
        return 1;
      if (!this.prerelease.length && !e.prerelease.length)
        return 0;
      var r = 0;
      do {
        var t2 = this.prerelease[r], n = e.prerelease[r];
        if (debug_1("prerelease compare", r, t2, n), t2 === void 0 && n === void 0)
          return 0;
        if (n === void 0)
          return 1;
        if (t2 === void 0)
          return -1;
        if (t2 !== n)
          return compareIdentifiers$1(t2, n);
      } while (++r);
    }}, {key: "compareBuild", value: function(e) {
      e instanceof o || (e = new o(e, this.options));
      var r = 0;
      do {
        var t2 = this.build[r], n = e.build[r];
        if (debug_1("prerelease compare", r, t2, n), t2 === void 0 && n === void 0)
          return 0;
        if (n === void 0)
          return 1;
        if (t2 === void 0)
          return -1;
        if (t2 !== n)
          return compareIdentifiers$1(t2, n);
      } while (++r);
    }}, {key: "inc", value: function(e, r) {
      switch (e) {
        case "premajor":
          this.prerelease.length = 0, this.patch = 0, this.minor = 0, this.major++, this.inc("pre", r);
          break;
        case "preminor":
          this.prerelease.length = 0, this.patch = 0, this.minor++, this.inc("pre", r);
          break;
        case "prepatch":
          this.prerelease.length = 0, this.inc("patch", r), this.inc("pre", r);
          break;
        case "prerelease":
          this.prerelease.length === 0 && this.inc("patch", r), this.inc("pre", r);
          break;
        case "major":
          this.minor === 0 && this.patch === 0 && this.prerelease.length !== 0 || this.major++, this.minor = 0, this.patch = 0, this.prerelease = [];
          break;
        case "minor":
          this.patch === 0 && this.prerelease.length !== 0 || this.minor++, this.patch = 0, this.prerelease = [];
          break;
        case "patch":
          this.prerelease.length === 0 && this.patch++, this.prerelease = [];
          break;
        case "pre":
          if (this.prerelease.length === 0)
            this.prerelease = [0];
          else {
            for (var t2 = this.prerelease.length; 0 <= --t2; )
              typeof this.prerelease[t2] == "number" && (this.prerelease[t2]++, t2 = -2);
            t2 === -1 && this.prerelease.push(0);
          }
          r && (this.prerelease[0] !== r || isNaN(this.prerelease[1])) && (this.prerelease = [r, 0]);
          break;
        default:
          throw new Error("invalid increment argument: ".concat(e));
      }
      return this.format(), this.raw = this.version, this;
    }}]), o;
  }();
  var semver = SemVer;
  var MAX_LENGTH$2 = constants.MAX_LENGTH;
  var re$1 = re_1.re;
  var t$1 = re_1.t;
  var parse = function(e, r) {
    if (r && _typeof(r) === "object" || (r = {loose: !!r, includePrerelease: false}), e instanceof semver)
      return e;
    if (typeof e != "string")
      return null;
    if (e.length > MAX_LENGTH$2)
      return null;
    if (!(r.loose ? re$1[t$1.LOOSE] : re$1[t$1.FULL]).test(e))
      return null;
    try {
      return new semver(e, r);
    } catch (e2) {
      return null;
    }
  };
  var parse_1 = parse;
  var valid = function(e, r) {
    return (r = parse_1(e, r)) ? r.version : null;
  };
  var valid_1 = valid;
  var clean = function(e, r) {
    return (r = parse_1(e.trim().replace(/^[=v]+/, ""), r)) ? r.version : null;
  };
  var clean_1 = clean;
  var inc = function(e, r, t2, n) {
    typeof t2 == "string" && (n = t2, t2 = void 0);
    try {
      return new semver(e, t2).inc(r, n).version;
    } catch (e2) {
      return null;
    }
  };
  var inc_1 = inc;
  var compare = function(e, r, t2) {
    return new semver(e, t2).compare(new semver(r, t2));
  };
  var compare_1 = compare;
  var eq = function(e, r, t2) {
    return compare_1(e, r, t2) === 0;
  };
  var eq_1 = eq;
  var diff = function(e, r) {
    if (eq_1(e, r))
      return null;
    var t2, n = parse_1(e), o = parse_1(r), a = (r = n.prerelease.length || o.prerelease.length) ? "pre" : "", r = r ? "prerelease" : "";
    for (t2 in n)
      if ((t2 === "major" || t2 === "minor" || t2 === "patch") && n[t2] !== o[t2])
        return a + t2;
    return r;
  };
  var diff_1 = diff;
  var major = function(e, r) {
    return new semver(e, r).major;
  };
  var major_1 = major;
  var minor = function(e, r) {
    return new semver(e, r).minor;
  };
  var minor_1 = minor;
  var patch = function(e, r) {
    return new semver(e, r).patch;
  };
  var patch_1 = patch;
  var prerelease = function(e, r) {
    return (r = parse_1(e, r)) && r.prerelease.length ? r.prerelease : null;
  };
  var prerelease_1 = prerelease;
  var rcompare = function(e, r, t2) {
    return compare_1(r, e, t2);
  };
  var rcompare_1 = rcompare;
  var compareLoose = function(e, r) {
    return compare_1(e, r, true);
  };
  var compareLoose_1 = compareLoose;
  var compareBuild = function(e, r, t2) {
    return e = new semver(e, t2), t2 = new semver(r, t2), e.compare(t2) || e.compareBuild(t2);
  };
  var compareBuild_1 = compareBuild;
  var sort = function(e, t2) {
    return e.sort(function(e2, r) {
      return compareBuild_1(e2, r, t2);
    });
  };
  var sort_1 = sort;
  var rsort = function(e, t2) {
    return e.sort(function(e2, r) {
      return compareBuild_1(r, e2, t2);
    });
  };
  var rsort_1 = rsort;
  var gt = function(e, r, t2) {
    return 0 < compare_1(e, r, t2);
  };
  var gt_1 = gt;
  var lt = function(e, r, t2) {
    return compare_1(e, r, t2) < 0;
  };
  var lt_1 = lt;
  var neq = function(e, r, t2) {
    return compare_1(e, r, t2) !== 0;
  };
  var neq_1 = neq;
  var gte = function(e, r, t2) {
    return 0 <= compare_1(e, r, t2);
  };
  var gte_1 = gte;
  var lte = function(e, r, t2) {
    return compare_1(e, r, t2) <= 0;
  };
  var lte_1 = lte;
  var cmp = function(e, r, t2, n) {
    switch (r) {
      case "===":
        return _typeof(e) === "object" && (e = e.version), _typeof(t2) === "object" && (t2 = t2.version), e === t2;
      case "!==":
        return _typeof(e) === "object" && (e = e.version), _typeof(t2) === "object" && (t2 = t2.version), e !== t2;
      case "":
      case "=":
      case "==":
        return eq_1(e, t2, n);
      case "!=":
        return neq_1(e, t2, n);
      case ">":
        return gt_1(e, t2, n);
      case ">=":
        return gte_1(e, t2, n);
      case "<":
        return lt_1(e, t2, n);
      case "<=":
        return lte_1(e, t2, n);
      default:
        throw new TypeError("Invalid operator: ".concat(r));
    }
  };
  var cmp_1 = cmp;
  var re$2 = re_1.re;
  var t$2 = re_1.t;
  var coerce = function(e, r) {
    if (e instanceof semver)
      return e;
    if (typeof e == "number" && (e = String(e)), typeof e != "string")
      return null;
    var t2, n = null;
    if ((r = r || {}).rtl) {
      for (; (t2 = re$2[t$2.COERCERTL].exec(e)) && (!n || n.index + n[0].length !== e.length); )
        n && t2.index + t2[0].length === n.index + n[0].length || (n = t2), re$2[t$2.COERCERTL].lastIndex = t2.index + t2[1].length + t2[2].length;
      re$2[t$2.COERCERTL].lastIndex = -1;
    } else
      n = e.match(re$2[t$2.COERCE]);
    return n === null ? null : parse_1("".concat(n[2], ".").concat(n[3] || "0", ".").concat(n[4] || "0"), r);
  };
  var coerce_1 = coerce;
  var Range = function() {
    function n(e, r) {
      var t2 = this;
      if (_classCallCheck(this, n), r && _typeof(r) === "object" || (r = {loose: !!r, includePrerelease: false}), e instanceof n)
        return e.loose === !!r.loose && e.includePrerelease === !!r.includePrerelease ? e : new n(e.raw, r);
      if (e instanceof comparator)
        return this.raw = e.value, this.set = [[e]], this.format(), this;
      if (this.options = r, this.loose = !!r.loose, this.includePrerelease = !!r.includePrerelease, this.raw = e, this.set = e.split(/\s*\|\|\s*/).map(function(e2) {
        return t2.parseRange(e2.trim());
      }).filter(function(e2) {
        return e2.length;
      }), !this.set.length)
        throw new TypeError("Invalid SemVer Range: ".concat(e));
      this.format();
    }
    return _createClass(n, [{key: "format", value: function() {
      return this.range = this.set.map(function(e) {
        return e.join(" ").trim();
      }).join("||").trim(), this.range;
    }}, {key: "toString", value: function() {
      return this.range;
    }}, {key: "parseRange", value: function(e) {
      var r = this, t2 = this.options.loose;
      e = e.trim();
      var n2 = t2 ? re$3[t$3.HYPHENRANGELOOSE] : re$3[t$3.HYPHENRANGE];
      e = e.replace(n2, hyphenReplace(this.options.includePrerelease)), debug_1("hyphen replace", e), e = e.replace(re$3[t$3.COMPARATORTRIM], comparatorTrimReplace), debug_1("comparator trim", e, re$3[t$3.COMPARATORTRIM]), e = (e = (e = e.replace(re$3[t$3.TILDETRIM], tildeTrimReplace)).replace(re$3[t$3.CARETTRIM], caretTrimReplace)).split(/\s+/).join(" ");
      var o = t2 ? re$3[t$3.COMPARATORLOOSE] : re$3[t$3.COMPARATOR];
      return e.split(" ").map(function(e2) {
        return parseComparator(e2, r.options);
      }).join(" ").split(/\s+/).map(function(e2) {
        return replaceGTE0(e2, r.options);
      }).filter(this.options.loose ? function(e2) {
        return !!e2.match(o);
      } : function() {
        return true;
      }).map(function(e2) {
        return new comparator(e2, r.options);
      });
    }}, {key: "intersects", value: function(e, t2) {
      if (!(e instanceof n))
        throw new TypeError("a Range is required");
      return this.set.some(function(r) {
        return isSatisfiable(r, t2) && e.set.some(function(e2) {
          return isSatisfiable(e2, t2) && r.every(function(r2) {
            return e2.every(function(e3) {
              return r2.intersects(e3, t2);
            });
          });
        });
      });
    }}, {key: "test", value: function(e) {
      if (!e)
        return false;
      if (typeof e == "string")
        try {
          e = new semver(e, this.options);
        } catch (e2) {
          return false;
        }
      for (var r = 0; r < this.set.length; r++)
        if (testSet(this.set[r], e, this.options))
          return true;
      return false;
    }}]), n;
  }();
  var range = Range;
  var re$3 = re_1.re;
  var t$3 = re_1.t;
  var comparatorTrimReplace = re_1.comparatorTrimReplace;
  var tildeTrimReplace = re_1.tildeTrimReplace;
  var caretTrimReplace = re_1.caretTrimReplace;
  var isSatisfiable = function(e, r) {
    for (var t2 = true, n = e.slice(), o = n.pop(); t2 && n.length; )
      t2 = n.every(function(e2) {
        return o.intersects(e2, r);
      }), o = n.pop();
    return t2;
  };
  var parseComparator = function(e, r) {
    return debug_1("comp", e, r), e = replaceCarets(e, r), debug_1("caret", e), e = replaceTildes(e, r), debug_1("tildes", e), e = replaceXRanges(e, r), debug_1("xrange", e), e = replaceStars(e, r), debug_1("stars", e), e;
  };
  var isX = function(e) {
    return !e || e.toLowerCase() === "x" || e === "*";
  };
  var replaceTildes = function(e, r) {
    return e.trim().split(/\s+/).map(function(e2) {
      return replaceTilde(e2, r);
    }).join(" ");
  };
  var replaceTilde = function(a, e) {
    return e = e.loose ? re$3[t$3.TILDELOOSE] : re$3[t$3.TILDE], a.replace(e, function(e2, r, t2, n, o) {
      return debug_1("tilde", a, e2, r, t2, n, o), t2 = isX(r) ? "" : isX(t2) ? ">=".concat(r, ".0.0 <").concat(+r + 1, ".0.0-0") : isX(n) ? ">=".concat(r, ".").concat(t2, ".0 <").concat(r, ".").concat(+t2 + 1, ".0-0") : o ? (debug_1("replaceTilde pr", o), ">=".concat(r, ".").concat(t2, ".").concat(n, "-").concat(o, " <").concat(r, ".").concat(+t2 + 1, ".0-0")) : ">=".concat(r, ".").concat(t2, ".").concat(n, " <").concat(r, ".").concat(+t2 + 1, ".0-0"), debug_1("tilde return", t2), t2;
    });
  };
  var replaceCarets = function(e, r) {
    return e.trim().split(/\s+/).map(function(e2) {
      return replaceCaret(e2, r);
    }).join(" ");
  };
  var replaceCaret = function(a, e) {
    debug_1("caret", a, e);
    var r = e.loose ? re$3[t$3.CARETLOOSE] : re$3[t$3.CARET], c = e.includePrerelease ? "-0" : "";
    return a.replace(r, function(e2, r2, t2, n, o) {
      return debug_1("caret", a, e2, r2, t2, n, o), r2 = isX(r2) ? "" : isX(t2) ? ">=".concat(r2, ".0.0").concat(c, " <").concat(+r2 + 1, ".0.0-0") : isX(n) ? r2 === "0" ? ">=".concat(r2, ".").concat(t2, ".0").concat(c, " <").concat(r2, ".").concat(+t2 + 1, ".0-0") : ">=".concat(r2, ".").concat(t2, ".0").concat(c, " <").concat(+r2 + 1, ".0.0-0") : o ? (debug_1("replaceCaret pr", o), r2 === "0" ? t2 === "0" ? ">=".concat(r2, ".").concat(t2, ".").concat(n, "-").concat(o, " <").concat(r2, ".").concat(t2, ".").concat(+n + 1, "-0") : ">=".concat(r2, ".").concat(t2, ".").concat(n, "-").concat(o, " <").concat(r2, ".").concat(+t2 + 1, ".0-0") : ">=".concat(r2, ".").concat(t2, ".").concat(n, "-").concat(o, " <").concat(+r2 + 1, ".0.0-0")) : (debug_1("no pr"), r2 === "0" ? t2 === "0" ? ">=".concat(r2, ".").concat(t2, ".").concat(n).concat(c, " <").concat(r2, ".").concat(t2, ".").concat(+n + 1, "-0") : ">=".concat(r2, ".").concat(t2, ".").concat(n).concat(c, " <").concat(r2, ".").concat(+t2 + 1, ".0-0") : ">=".concat(r2, ".").concat(t2, ".").concat(n, " <").concat(+r2 + 1, ".0.0-0")), debug_1("caret return", r2), r2;
    });
  };
  var replaceXRanges = function(e, r) {
    return debug_1("replaceXRanges", e, r), e.split(/\s+/).map(function(e2) {
      return replaceXRange(e2, r);
    }).join(" ");
  };
  var replaceXRange = function(u, l) {
    u = u.trim();
    var e = l.loose ? re$3[t$3.XRANGELOOSE] : re$3[t$3.XRANGE];
    return u.replace(e, function(e2, r, t2, n, o, a) {
      debug_1("xRange", u, e2, r, t2, n, o, a);
      var c = isX(t2), i = c || isX(n), s = i || isX(o);
      return r === "=" && s && (r = ""), a = l.includePrerelease ? "-0" : "", c ? e2 = r === ">" || r === "<" ? "<0.0.0-0" : "*" : r && s ? (i && (n = 0), o = 0, r === ">" ? (r = ">=", o = i ? (t2 = +t2 + 1, n = 0) : (n = +n + 1, 0)) : r === "<=" && (r = "<", i ? t2 = +t2 + 1 : n = +n + 1), r === "<" && (a = "-0"), e2 = "".concat(r + t2, ".").concat(n, ".").concat(o).concat(a)) : i ? e2 = ">=".concat(t2, ".0.0").concat(a, " <").concat(+t2 + 1, ".0.0-0") : s && (e2 = ">=".concat(t2, ".").concat(n, ".0").concat(a, " <").concat(t2, ".").concat(+n + 1, ".0-0")), debug_1("xRange return", e2), e2;
    });
  };
  var replaceStars = function(e, r) {
    return debug_1("replaceStars", e, r), e.trim().replace(re$3[t$3.STAR], "");
  };
  var replaceGTE0 = function(e, r) {
    return debug_1("replaceGTE0", e, r), e.trim().replace(re$3[r.includePrerelease ? t$3.GTE0PRE : t$3.GTE0], "");
  };
  var hyphenReplace = function(E) {
    return function(e, r, t2, n, o, a, c, i, s, u, l, p, f) {
      return r = isX(t2) ? "" : isX(n) ? ">=".concat(t2, ".0.0").concat(E ? "-0" : "") : isX(o) ? ">=".concat(t2, ".").concat(n, ".0").concat(E ? "-0" : "") : a ? ">=".concat(r) : ">=".concat(r).concat(E ? "-0" : ""), i = isX(s) ? "" : isX(u) ? "<".concat(+s + 1, ".0.0-0") : isX(l) ? "<".concat(s, ".").concat(+u + 1, ".0-0") : p ? "<=".concat(s, ".").concat(u, ".").concat(l, "-").concat(p) : E ? "<".concat(s, ".").concat(u, ".").concat(+l + 1, "-0") : "<=".concat(i), "".concat(r, " ").concat(i).trim();
    };
  };
  var testSet = function(e, r, t2) {
    for (var n = 0; n < e.length; n++)
      if (!e[n].test(r))
        return false;
    if (!r.prerelease.length || t2.includePrerelease)
      return true;
    for (var o = 0; o < e.length; o++)
      if (debug_1(e[o].semver), e[o].semver !== comparator.ANY && 0 < e[o].semver.prerelease.length) {
        var a = e[o].semver;
        if (a.major === r.major && a.minor === r.minor && a.patch === r.patch)
          return true;
      }
    return false;
  };
  var ANY = Symbol("SemVer ANY");
  var Comparator = function() {
    function i(e, r) {
      if (_classCallCheck(this, i), r && _typeof(r) === "object" || (r = {loose: !!r, includePrerelease: false}), e instanceof i) {
        if (e.loose === !!r.loose)
          return e;
        e = e.value;
      }
      debug_1("comparator", e, r), this.options = r, this.loose = !!r.loose, this.parse(e), this.semver === ANY ? this.value = "" : this.value = this.operator + this.semver.version, debug_1("comp", this);
    }
    return _createClass(i, null, [{key: "ANY", get: function() {
      return ANY;
    }}]), _createClass(i, [{key: "parse", value: function(e) {
      var r = this.options.loose ? re$4[t$4.COMPARATORLOOSE] : re$4[t$4.COMPARATOR];
      if (!(r = e.match(r)))
        throw new TypeError("Invalid comparator: ".concat(e));
      this.operator = r[1] !== void 0 ? r[1] : "", this.operator === "=" && (this.operator = ""), r[2] ? this.semver = new semver(r[2], this.options.loose) : this.semver = ANY;
    }}, {key: "toString", value: function() {
      return this.value;
    }}, {key: "test", value: function(e) {
      if (debug_1("Comparator.test", e, this.options.loose), this.semver === ANY || e === ANY)
        return true;
      if (typeof e == "string")
        try {
          e = new semver(e, this.options);
        } catch (e2) {
          return false;
        }
      return cmp_1(e, this.operator, this.semver, this.options);
    }}, {key: "intersects", value: function(e, r) {
      if (!(e instanceof i))
        throw new TypeError("a Comparator is required");
      if (r && _typeof(r) === "object" || (r = {loose: !!r, includePrerelease: false}), this.operator === "")
        return this.value === "" || new range(e.value, r).test(this.value);
      if (e.operator === "")
        return e.value === "" || new range(this.value, r).test(e.semver);
      var t2 = !(this.operator !== ">=" && this.operator !== ">" || e.operator !== ">=" && e.operator !== ">"), n = !(this.operator !== "<=" && this.operator !== "<" || e.operator !== "<=" && e.operator !== "<"), o = this.semver.version === e.semver.version, a = !(this.operator !== ">=" && this.operator !== "<=" || e.operator !== ">=" && e.operator !== "<="), c = cmp_1(this.semver, "<", e.semver, r) && (this.operator === ">=" || this.operator === ">") && (e.operator === "<=" || e.operator === "<"), e = cmp_1(this.semver, ">", e.semver, r) && (this.operator === "<=" || this.operator === "<") && (e.operator === ">=" || e.operator === ">");
      return t2 || n || o && a || c || e;
    }}]), i;
  }();
  var comparator = Comparator;
  var re$4 = re_1.re;
  var t$4 = re_1.t;
  var satisfies = function(e, r, t2) {
    try {
      r = new range(r, t2);
    } catch (e2) {
      return false;
    }
    return r.test(e);
  };
  var satisfies_1 = satisfies;
  var toComparators = function(e, r) {
    return new range(e, r).set.map(function(e2) {
      return e2.map(function(e3) {
        return e3.value;
      }).join(" ").trim().split(" ");
    });
  };
  var maxSatisfying = function(e, r, t2) {
    var n = null, o = null, a = null;
    try {
      a = new range(r, t2);
    } catch (e2) {
      return null;
    }
    return e.forEach(function(e2) {
      a.test(e2) && (n && o.compare(e2) !== -1 || (o = new semver(n = e2, t2)));
    }), n;
  };
  var minSatisfying = function(e, r, t2) {
    var n = null, o = null, a = null;
    try {
      a = new range(r, t2);
    } catch (e2) {
      return null;
    }
    return e.forEach(function(e2) {
      a.test(e2) && (n && o.compare(e2) !== 1 || (o = new semver(n = e2, t2)));
    }), n;
  };
  var minVersion = function(e, r) {
    e = new range(e, r);
    var t2 = new semver("0.0.0");
    if (e.test(t2))
      return t2;
    if (t2 = new semver("0.0.0-0"), e.test(t2))
      return t2;
    t2 = null;
    for (var n = 0; n < e.set.length; ++n)
      e.set[n].forEach(function(e2) {
        var r2 = new semver(e2.semver.version);
        switch (e2.operator) {
          case ">":
            r2.prerelease.length === 0 ? r2.patch++ : r2.prerelease.push(0), r2.raw = r2.format();
          case "":
          case ">=":
            t2 && !gt_1(t2, r2) || (t2 = r2);
            break;
          case "<":
          case "<=":
            break;
          default:
            throw new Error("Unexpected operation: ".concat(e2.operator));
        }
      });
    return t2 && e.test(t2) ? t2 : null;
  };
  var validRange = function(e, r) {
    try {
      return new range(e, r).range || "*";
    } catch (e2) {
      return null;
    }
  };
  var ANY$1 = comparator.ANY;
  var outside = function(n, o, e, a) {
    var c, i, s, u, l;
    switch (n = new semver(n, a), o = new range(o, a), e) {
      case ">":
        c = gt_1, i = lte_1, s = lt_1, u = ">", l = ">=";
        break;
      case "<":
        c = lt_1, i = gte_1, s = gt_1, u = "<", l = "<=";
        break;
      default:
        throw new TypeError('Must provide a hilo val of "<" or ">"');
    }
    if (satisfies_1(n, o, a))
      return false;
    for (var r = 0; r < o.set.length; ++r) {
      var t2 = function(e2) {
        var e2 = o.set[e2], r2 = null, t3 = null;
        return e2.forEach(function(e3) {
          e3.semver === ANY$1 && (e3 = new comparator(">=0.0.0")), r2 = r2 || e3, t3 = t3 || e3, c(e3.semver, r2.semver, a) ? r2 = e3 : s(e3.semver, t3.semver, a) && (t3 = e3);
        }), r2.operator === u || r2.operator === l || (!t3.operator || t3.operator === u) && i(n, t3.semver) || t3.operator === l && s(n, t3.semver) ? {v: false} : void 0;
      }(r);
      if (_typeof(t2) === "object")
        return t2.v;
    }
    return true;
  };
  var outside_1 = outside;
  var gtr = function(e, r, t2) {
    return outside_1(e, r, ">", t2);
  };
  var ltr = function(e, r, t2) {
    return outside_1(e, r, "<", t2);
  };
  var intersects = function(e, r, t2) {
    return e = new range(e, t2), r = new range(r, t2), e.intersects(r);
  };
  var simplify = function(e, r, t2) {
    var n = [], o = null, a = null, c = e.sort(function(e2, r2) {
      return compare_1(e2, r2, t2);
    }), i = _createForOfIteratorHelper(c);
    try {
      for (i.s(); !(s = i.n()).done; )
        var s = s.value, o = satisfies_1(s, r, t2) ? (a = s, o || s) : (a && n.push([o, a]), a = null);
    } catch (e2) {
      i.e(e2);
    } finally {
      i.f();
    }
    o && n.push([o, null]);
    for (var u = [], l = 0, p = n; l < p.length; l++) {
      var f = _slicedToArray(p[l], 2), E = f[0];
      E === (f = f[1]) ? u.push(E) : f || E !== c[0] ? f ? E === c[0] ? u.push("<=".concat(f)) : u.push("".concat(E, " - ").concat(f)) : u.push(">=".concat(E)) : u.push("*");
    }
    var m = u.join(" || "), e = typeof r.raw == "string" ? r.raw : String(r);
    return m.length < e.length ? m : r;
  };
  var ANY$2 = comparator.ANY;
  var subset = function(e, r, t2) {
    e = new range(e, t2), r = new range(r, t2);
    var n, o = false, a = _createForOfIteratorHelper(e.set);
    try {
      e:
        for (a.s(); !(n = a.n()).done; ) {
          var c = n.value, i = _createForOfIteratorHelper(r.set);
          try {
            for (i.s(); !(s = i.n()).done; ) {
              var s = s.value, s = simpleSubset(c, s, t2), o = o || s !== null;
              if (s)
                continue e;
            }
          } catch (e2) {
            i.e(e2);
          } finally {
            i.f();
          }
          if (o)
            return false;
        }
    } catch (e2) {
      a.e(e2);
    } finally {
      a.f();
    }
    return true;
  };
  var simpleSubset = function(e, r, t2) {
    if (e.length === 1 && e[0].semver === ANY$2)
      return r.length === 1 && r[0].semver === ANY$2;
    var n, o, a, c = new Set(), i = _createForOfIteratorHelper(e);
    try {
      for (i.s(); !(s = i.n()).done; ) {
        var s = s.value;
        s.operator === ">" || s.operator === ">=" ? n = higherGT(n, s, t2) : s.operator === "<" || s.operator === "<=" ? o = lowerLT(o, s, t2) : c.add(s.semver);
      }
    } catch (e2) {
      i.e(e2);
    } finally {
      i.f();
    }
    if (1 < c.size)
      return null;
    if (n && o) {
      if (0 < (a = compare_1(n.semver, o.semver, t2)))
        return null;
      if (a === 0 && (n.operator !== ">=" || o.operator !== "<="))
        return null;
    }
    var u, l = _createForOfIteratorHelper(c);
    try {
      for (l.s(); !(u = l.n()).done; ) {
        var p = u.value;
        if (n && !satisfies_1(p, String(n), t2))
          return null;
        if (o && !satisfies_1(p, String(o), t2))
          return null;
        var f = _createForOfIteratorHelper(r);
        try {
          for (f.s(); !(E = f.n()).done; ) {
            var E = E.value;
            if (!satisfies_1(p, String(E), t2))
              return false;
          }
        } catch (e2) {
          f.e(e2);
        } finally {
          f.f();
        }
        return true;
      }
    } catch (e2) {
      l.e(e2);
    } finally {
      l.f();
    }
    var m = _createForOfIteratorHelper(r);
    try {
      for (m.s(); !(h = m.n()).done; ) {
        var h = h.value, _ = _ || h.operator === ">" || h.operator === ">=", v = v || h.operator === "<" || h.operator === "<=";
        if (n) {
          if (h.operator === ">" || h.operator === ">=") {
            if (higherGT(n, h, t2) === h)
              return false;
          } else if (n.operator === ">=" && !satisfies_1(n.semver, String(h), t2))
            return false;
        }
        if (o) {
          if (h.operator === "<" || h.operator === "<=") {
            if (lowerLT(o, h, t2) === h)
              return false;
          } else if (o.operator === "<=" && !satisfies_1(o.semver, String(h), t2))
            return false;
        }
        if (!h.operator && (o || n) && a !== 0)
          return false;
      }
    } catch (e2) {
      m.e(e2);
    } finally {
      m.f();
    }
    return !(n && v && !o && a !== 0 || o && _ && !n && a !== 0);
  };
  var higherGT = function(e, r, t2) {
    return e && (0 < (t2 = compare_1(e.semver, r.semver, t2)) || !(t2 < 0 || r.operator === ">" && e.operator === ">=")) ? e : r;
  };
  var lowerLT = function(e, r, t2) {
    return e && ((t2 = compare_1(e.semver, r.semver, t2)) < 0 || !(0 < t2 || r.operator === "<" && e.operator === "<=")) ? e : r;
  };
  var semver$1 = {re: re_1.re, src: re_1.src, tokens: re_1.t, SEMVER_SPEC_VERSION: constants.SEMVER_SPEC_VERSION, SemVer: semver, compareIdentifiers: identifiers.compareIdentifiers, rcompareIdentifiers: identifiers.rcompareIdentifiers, parse: parse_1, valid: valid_1, clean: clean_1, inc: inc_1, diff: diff_1, major: major_1, minor: minor_1, patch: patch_1, prerelease: prerelease_1, compare: compare_1, rcompare: rcompare_1, compareLoose: compareLoose_1, compareBuild: compareBuild_1, sort: sort_1, rsort: rsort_1, gt: gt_1, lt: lt_1, eq: eq_1, neq: neq_1, gte: gte_1, lte: lte_1, cmp: cmp_1, coerce: coerce_1, Comparator: comparator, Range: range, satisfies: satisfies_1, toComparators, maxSatisfying, minSatisfying, minVersion, validRange, outside: outside_1, gtr, ltr, intersects, simplifyRange: simplify, subset};
  !function() {
    function t2(e, r) {
      t2.installed || (r ? semver$1.valid(e.version) != null ? (t2.installed = true, semver$1.lt(e.version, "3.0.0") ? Object.defineProperties(e.prototype, {axios: {get: function() {
        return r;
      }}, $http: {get: function() {
        return r;
      }}}) : (e.config.globalProperties.axios = r, e.config.globalProperties.$http = r), e.axios = r, e.$http = r) : console.error("Unkown vue version") : console.error("You have to install axios"));
    }
    (typeof exports == "undefined" ? "undefined" : _typeof(exports)) == "object" ? module.exports = t2 : typeof define == "function" && define.amd ? define([], function() {
      return t2;
    }) : window.Vue && window.axios && Vue.use(t2, window.axios);
  }();
});

// dep:vue-axios
var vue_axios_default = require_vue_axios_es5();
export {
  vue_axios_default as default
};
//# sourceMappingURL=vue-axios.js.map
